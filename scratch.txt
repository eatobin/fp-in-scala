"Hello world!"
"Hello world!".toUpperCase()
2.min(3)
"abcdef".take(3)
"abcdef" take 3
"hello".toUpperCase.toLowerCase
"Hello world!".take(2 + 3)
123.toShort // this is how we define a `Short` in Scala
"the quick brown fox" split " "
"foo" take 1
1.+(2).+(3)
42

object Test {}

Test

object Test2 {
  def name: String = "Probably the best object ever"
}

Test2.name

object Test3 {
  def hello(name: String) =
    "Hello " + name
}

Test3.hello("Eric")

object Test4 {
  val name = "Noel"

  def hello(other: String): String =
    name + " says hi to " + other
}

Test4.hello("Eric")

object Test7 {
  val simpleField = {
    println("Evaluating simpleField")
    42
  }

  def noParameterMethod = {
    println("Evaluating noParameterMethod")
    42
  }
}

Test7.simpleField
Test7.simpleField
Test7.simpleField
Test7.noParameterMethod
Test7.noParameterMethod
Test7.noParameterMethod

object Oswald {
  val colour = "Black"
  val food = "Milk"
}

object Henderson {
  val colour = "Ginger"
  val food = "Chips"
}

object Quintin {
  val colour = "Tabby and white"
  val food = "Curry"
}

Quintin.colour

object calc {
  def square(x: Double): Double = x * x

  def cube(x: Double): Double = square(x) * x
}

calc.square(9.0)
calc.cube(3.0)

object calc2 {
  def square(x: Double): Double = x * x

  def cube(x: Double): Double = square(x) * x

  def square(x: Int): Int = x * x

  def cube(x: Int): Int = square(x) * x
}

calc2.square(9.0)
calc2.cube(3)
val x: Int = calc.square(2).toInt
println(x)

object argh {
  def a = {
    println("a")
    1
  }

  val b = {
    println("b")
    a + 2
  }

  def c = {
    println("c")
    a
    b + "c"
  }
}

argh.c + argh.b + argh.a

object person {
  val firstName = "First"
  val lastName = "Last"
}

println(person.firstName)

object alien {
  def greet(p: person.type): String = "Alien Al sez Hi " + p.firstName
}

alien.greet(person)
